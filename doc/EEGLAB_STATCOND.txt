
--------------------------------------------------------------------------
Generating surrogate data for significance testing (p-values) from the orignal data. This is a non-parametric significance testing. There are 2 ways: bootstrap or permutation. From the following header of the EEGLAB function 'stacond.m' (the main function), if the data is paired, permutation is done across condition respecting the pairing (not changing subject or trial order). Otherwise, this order is permuted also

%                   For nonparametric, permutation-based testing, the 
%                last dimension of the data arrays (which may be of up to 
%                4 dimensions) is permuted across conditions, either in
%                a 'paired' fashion (not changing the, e.g., subject or
%                trial order in the last dimension) or in an umpaired 
%                fashion (not respecting this order). If the number of 
%                elements in the last dimension is not the same across 
%                conditions, the 'paired' option is turned 'off'.  Note: 
%                All other dimensions MUST be constant across conditions. 

From the following header of the EEGLAB function that generates surrogates, 'bootstrap' draws with replacement and 'permutation' draws without replacement (only a permutation of all data)

% surrogdistrib - Build surrogate distribution
%
% surrog = surrogdistrib(data, varargin);
%
% Inputs:
%  data   - [cell] data arrays for which to compute a surrogate
%           distribution.
%
% Optional inputs:
%  'method'  - ['bootstrap'|'perm'] use either 'bootstrap' or 'permutation'
%              method. Bootstrap performs draws with replacement and 
%              permutation performs draws without replacement. Default 
%              is 'perm'. 
%  'pairing' - ['on'|'off'] pair the data arrays.
%  'naccu'   - [integer] number of surrogate. Default is 1.
%  'precomp' - cell array containing precomputed value for speeding up
%              mulitple calls
%
% Output:
%  surrog  - surrogate distribution
%  precomp - cell array containing precomputed value for speeding up
%            mulitple calls
%
% Author: Arnaud Delorme, SCCN/INC/UCSD, La Jolla, 2005-