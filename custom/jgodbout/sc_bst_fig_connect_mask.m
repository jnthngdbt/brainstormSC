function sc_bst_fig_connect_mask(hFig,s)
% This function apply a mask of channel pairs to display in the current
% connectivity figure. First input is the handle of current figure (you can
% click on the figure to make it current and send GCF as first input).
% 
% Second input is the mask, that can take various forms. If not sent (or
% empty), all pairs will be displayed (disabling all active filters). If
% numeric of logical, it correspond directly to the filter to apply (it
% must respect the format of the 3D connectivity data!).
% 
% The mask can also specify directly by their names the pairs to display.
% It can be a cell array {'c3-p3','fp1-fp2','o1-f4','p4-fp1'} or a string
% where pairs are separated by a comma 'fp1-fp2, o1-f4, p4-fp1'.
% 
% Special case: if struct, it assumes that it is statistical connectivity
% generated by process PROCESS_SC_STAT_EEGLAB_STATCOND. It uses mask in the
% field <Options.statcond.mask_mp>.

d = getappdata(hFig);
Nc = numel(d.RowNames);

if nargin<2, s = []; end

if isempty(s)
    mask = true(Nc*(Nc+1)/2,1);
elseif islogical(s)
    mask = s;
elseif isnumeric(s)
    mask = false(Nc*(Nc+1)/2,1);
    mask(s) = true;
elseif iscell(s) || ischar(s)
    mask = mask_from_pairnames(d.RowNames,s);
elseif isstruct(s)
    mask = s.Options.statcond.mask_mp;
else
    error('Unknown input format')
end
mask = reformat_connect_vector(mask);

disableAllFilters;
figure_connect('SetMeasureDisplayFilter',hFig,ones(size(mask)));
figure_connect('SetMeasureDisplayFilter',hFig,mask);

end

function disableAllFilters

hFig = gcf;
Refresh = 1;

% Min/Max distance filter
figure_connect('SetMeasureDistanceFilter',hFig, -Inf, Inf, Refresh);
% Anatomy filter
figure_connect('SetMeasureAnatomicalFilterTo',hFig, 0, Refresh); % 0=All
% Minimum measure filter
figure_connect('SetMeasureThreshold',hFig, -Inf, Refresh);
% Significance filter
figure_connect('SetMeasureSignificanceFilterTo',hFig, Inf, Refresh);

end

function v = reformat_connect_vector(v)
% Connectivity vector format used in figure is different from format used
% in data structure!

v = double(v);
M = sc_bst_connect_format_vec2mat(v);
i = find((tril(ones(size(M,1))).*(1-eye(size(M,1))))>0);
v = M(i);
v = v>0;

end

function iPairFilter = mask_from_pairnames(Names,PairFilter)

% Channel pairs filter
AllPairs = sc_bst_connect_vector_label(Names);
if isempty(PairFilter)
    PairFilter = AllPairs;
else
    if ischar(PairFilter)
        PairFilter = textscan(PairFilter,'%s','delimiter',',');
        PairFilter = PairFilter{1};
    end
end
PairMatrix = sc_bst_connect_matrix_label(Names);
iPairFilter = false(size(PairMatrix));
for i=1:numel(PairFilter)
    iPairFilter = iPairFilter | strcmpi(PairMatrix,PairFilter{i});
end
iPairFilter = iPairFilter | iPairFilter'; % Undirected connectivity
iPairFilter = sc_bst_connect_format_mat2vec(iPairFilter)>0;
% iPairFilter = find(sc_bst_connect_format_mat2vec(iPairFilter)>0);

end
